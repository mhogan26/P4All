digraph ingress {
_condition_4 [shape=box label="_condition_4\n((nc_hdr.op == 0) and (nc_cache_md.cache_valid == 1))"];
_condition_3 [shape=box label="_condition_3\n((nc_hdr.op == 0) and (nc_cache_md.cache_valid == 1))"];
_condition_2 [shape=box label="_condition_2\n(nc_hdr.op == 9)"];
_condition_1 [shape=box label="_condition_1\n(nc_hdr.op == 0)"];
_condition_0 [shape=box label="_condition_0\n(nc_cache_md.cache_exist == 1)"];
reply_read_hit_after -> ipv4_route [color=red label="ipv4.dstAddr" decorate=true];
reply_read_hit_before -> reply_read_hit_after [color=blue label="reply_read_hit_info_md.ipv4_dstAddr,
reply_read_hit_info_md.ipv4_srcAddr" decorate=true];
reply_read_hit_before -> _condition_4 [style=dotted ];
set_cache_valid -> _condition_3 [style=dotted ];
check_cache_valid -> _condition_4 [color=red label="nc_cache_md.cache_valid" decorate=true];
check_cache_valid -> _condition_3 [color=red label="nc_cache_md.cache_valid" decorate=true];
check_cache_valid -> _condition_2 [style=dotted ];
_condition_4 -> reply_read_hit_after [color=green label="" decorate=true arrowhead = dot];
_condition_4 -> ipv4_route [style=dotted ];
_condition_3 -> _condition_4 [style=dotted ];
_condition_3 -> reply_read_hit_before [color=green label="" decorate=true arrowhead = dot];
_condition_2 -> set_cache_valid [color=green label="" decorate=true arrowhead = dot];
_condition_2 -> reply_read_hit_after [color=yellow label="nc_hdr.op" decorate=true];
_condition_2 -> _condition_3 [style=dotted ];
_condition_1 -> check_cache_valid [color=green label="" decorate=true arrowhead = dot];
_condition_1 -> _condition_2 [style=dotted ];
_condition_0 -> _condition_3 [style=dotted ];
_condition_0 -> _condition_2 [color=green label="" decorate=true arrowhead = dot];
_condition_0 -> _condition_1 [color=green label="" decorate=true arrowhead = dot];
check_cache_exist -> _condition_0 [color=red label="nc_cache_md.cache_exist" decorate=true];
}
